:
# sb - run sysbench with options
# Copyright 2016 Karwin Software Solutions LLC

: ${SBUSER:="root"}
: ${SBPASSWORD:='Example@2016'}

database="sysbench"
defaultsfile="$HOME/.my.cnf"
name="benchmark-results"
outputdir="results"
prepare=0
runtime="600"
rows="0"
table="olaptest1"
verbose=0
threads_choices="32 64 96 128"

function usage()
{
	cat <<_USAGE_
sb - wrapper to invoke sysbench
Usage:
-d <database>		Database containing benchmark data (default: $database)
-f <defaultsfile>	MySQL option defaults file (default: $defaultsfile)
-n <name>		Name of test run (default: $name)
-o <outputdir>		Directory to save results (default: $outputdir)
-p			Prepare data (default: 0)
-r <runtime>		Number of seconds to run each test (default: $runtime)
-s <rows>		Number of rows in table to scan (default: size of table)
-t <table>		Table in benchmark database (default: $table)
-T "<threads>"		Space-separated list of thread counts (default: $threads_choices)
-v			Verbose output
_USAGE_
}

while getopts d:f:n:o:pr:s:t:T:v opt
do
	case $opt in
	d) database="$OPTARG" ;;
	f) defaultsfile="$OPTARG" ;;
	n) name="$OPTARG" ;;
	p) prepare=1 ;;
	o) outputdir="$OPTARG" ;;
	r) runtime="$OPTARG" ;;
	s) rows="$OPTARG" ;;
	t) table="$OPTARG" ;;
	T) threads_choices="$OPTARG" ;;
	v) verbose=1 ;;
	\?) usage ; exit 0 ;;
	esac
done
shift $((OPTIND - 1))

if [ -s "$defaultsfile" ]
then
	if [ -f "$defaultsfile" ]
	then
		if [ $verbose = 1 ]
		then
			echo "Using defaults file $defaultsfile"
		fi
		defaults="--defaults-extra-file=$defaultsfile"
	fi
fi

if [ $prepare = 1 ]
then
	if [ $verbose = 1 ]
	then
		echo "Preparing data for $rows rows"
	fi
	sysbench \
	--test=olap.lua \
        --mysql-db="$database" --mysql-user="$SBUSER" --mysql-password="$SBPASSWORD" \
	--olap-table-size=$rows \
	--olap-verbose=1 \
	prepare
	exit 0
fi


if [ $verbose = 1 ]
then
	echo "Running benchmark with various threads ($threads_choices), output in $outputdir/$name"
fi

if [ "$rows" -eq 0 ]
then
	rows=`mysql $defaults -B -N -e "SELECT COUNT(*) FROM $database.$table"`
	if [ $verbose = 1 ]
	then
		echo "Querying on full table with $rows rows"
	fi
else
	echo "Querying $rows rows"
fi

mkdir -p results/$name

for threads in $threads_choices
do
	echo "Running test for $runtime seconds with $threads threads..."
        sysbench \
        --test=olap.lua \
        --mysql-db="$database" --mysql-user="$SBUSER" --mysql-password="$SBPASSWORD" \
	--olap-table-size=$rows \
	--olap-simple-indexed-ranges=0 \
	--olap-simple-unindexed-ranges=0 \
	--olap-count-indexed-ranges=2 \
	--olap-count-unindexed-ranges=2 \
        --max-time="$runtime" \
        --max-requests="0" \
        --num-threads="$threads" \
        --tx-rate="0" \
        run > $outputdir/$name/olap-$threads.log
done

if [ $verbose = 1 ]
then
	echo "Parsing sysbench output into JSON"
fi
./sb2json.py $outputdir/$name/olap-*.log > $outputdir/$name/olap.json
