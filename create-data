:

: ${CSVDATA:=sysbench-data}
: ${SBLENGTH:=100000000}
: ${SBDATABASE:=sysbench}
: ${SBTABLE:=sbtest2}
: ${SBPARTITIONS:=1024}

if [ ! -d $CSVDATA ] ; then
	echo "Starting creating CSV files..."
	time seq 1 $SBPARTITIONS |
	parallel --eta --progress --results $CSVDATA \
	  "awk -v CSVLENGTH=$SBLENGTH -v CSVOFFSET={} -v CSVPARTITIONS=$SBPARTITIONS -f create-data.awk" >/dev/null
	echo "Done creating CSV files."

	find $CSVDATA -name "stdout" -execdir mv {} $SBTABLE \;
fi

mysqladmin create $SBDATABASE
mysql $SBDATABASE -e "DROP TABLE IF EXISTS $SBTABLE"
mysql $SBDATABASE -e "CREATE TABLE $SBTABLE ( \
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, \
  k INT UNSIGNED NOT NULL, \
  c char(120) NOT NULL, \
pad char(60) NOT NULL, KEY(k)) \
ENGINE=InnoDB PARTITION BY HASH(id) PARTITIONS $SBPARTITIONS"

echo "Starting loading CSV files..."
cores=$((`parallel --number-of-cores` * 2))

time mysqlimport --verbose --local --use-threads=$cores --fields-terminated-by="," $SBDATABASE $CSVDATA/1/*/$SBTABLE
echo "Done loading CSV files."
