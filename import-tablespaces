:
# import-tables-physical.sh
# Copyright 2016 Karwin Software Solutions LLC

verbose=0
sourcedatabase="sysbench"
destdatabase="sysbenchtest"
defaultsfile="$HOME/.my.cnf"
threads=`parallel --will-cite --number-of-cores`

options=`getopt b:s:d:D:f:v $*`
if [ $? != 0 ]
then
	cat <<_USAGE_
import-tablespaces: Fast transfer of tablespaces from one database to another.

Usage:
-s <database>	Source database name (default: $sourcedatabase)
-d <database>	Destination database name (default: $destdatabase)
-f <path>	MySQL options file (default: $defaultsfile)
-v		Verbose output

Note: the tables must be in file-per-table format.
_USAGE_
	exit 1
fi
eval set -- $options
while [ $# -gt 0 ]
do
	case "$1" in
	-s) sourcedatabase="$2" ; shift ; shift ;;
	-d) destdatabase="$2" ; shift ; shift ;;
	-f) defaultsfile="$2" ; shift ; shift ;;
	-v) verbose=1 ; shift ;;
	--) shift ; break ;;
	-*) usage ; exit 0 ;;
	*) break ;;
	esac
done

if [ -s "$defaultsfile" ]
then 
	if [ ! -f "$defaultsfile" ]
	then
		echo "ERROR: Cannot read defaults file $defaultsfile. Exiting." >&2
		exit 1
	fi
	defaults="--defaults-file=$defaultsfile"
fi

DATADIR=`mysql "$defaults" -B -N -e "SELECT @@DATADIR"`
INNODB_FILE_PER_TABLE=`mysql "$defaults" -B -N -e "SELECT @@INNODB_FILE_PER_TABLE"`
VERSION=`mysql "$defaults" -B -N -e "SELECT @@VERSION"`

if [ "$INNODB_FILE_PER_TABLE" != "1" -a "$INNODB_FILE_PER_TABLE" != "ON" ]
then
	echo "ERROR: Cannot restore to an instance that does not have innodb_file_per_table=1. Exiting." >&2
	exit 1
fi

if [ ! -d "$DATADIR" ]
then
	echo "ERROR: Cannot find datadir $DATADIR. Exiting." >&2
	exit 1
fi

if [ ! -w "$DATADIR" ]
then
	echo "ERROR: Cannot write to datadir $DATADIR. Exiting." >&2
	exit 1
fi

if [ ! -f "tmp/$sourcedatabase-dump.sql" ]
then
	if [ $verbose ]
	then
		echo "Dumping schema..."
	fi
	mysqldump "$defaults" --single-transaction --routines --triggers --no-data "$sourcedatabase" > "/tmp/$sourcedatabase-dump.sql"
	if [ $? != 0 ]
	then
		echo "ERROR: Cannot dump database $sourcedatabase. Exiting." >&2
		exit 1
	fi
fi

if [ $verbose ]
then
	echo "Dropping database $destdatabase"
fi
mysqladmin "$defaults" --force drop "$destdatabase" > /dev/null 2>&1

if [ $verbose ]
then
	echo "Creating database $destdatabase"
fi
mysqladmin "$defaults" create "$destdatabase"
if [ $? != 0 ]
then
	echo "ERROR: Cannot create database $destdatabase. Exiting." >&2
	exit 1
fi

if [ $verbose ]
then
	echo "Creating tables, views, triggers, routines..."
fi
mysql "$defaults" "$destdatabase" < "/tmp/$sourcedatabase-dump.sql"
if [ $? != 0 ]
then
	echo "ERROR: Cannot define tables, views, triggers, routines. Exiting." >&2
	exit 1
fi

if [ $verbose ]
then
	echo "Discarding tablespaces..."
fi

discardsql="SELECT CONCAT('ALTER TABLE $destdatabase.', table_name, ' DISCARD TABLESPACE;') FROM INFORMATION_SCHEMA.TABLES WHERE table_schema='$destdatabase' AND table_type='BASE TABLE';"

mysql "$defaults" -B -N -e "$discardsql" |
parallel --will-cite mysql "$defaults" -e "{}"

makeflushsql="SELECT CONCAT('FLUSH TABLES ', GROUP_CONCAT(table_name), ' FOR EXPORT;') FROM INFORMATION_SCHEMA.TABLES WHERE table_schema='$destdatabase' AND table_type='BASE TABLE';"
flushsql=`mysql "$defaults" -B -N -e "$makeflushsql"`

# need to start the FLUSH TABLES, wait for the rsync to be done,
# then UNLOCK TABLES in the same session, so we start a coproc to do it,
# which we will signal by writing to its stdin file descriptor.
if [ $verbose ]
then
	echo "Flushing tables for export..."
fi
coproc { mysql -e "$flushsql ; system echo FLUSHED ; system sed /UNLOCK/q ; UNLOCK TABLES;" $sourcedatabase; }

sed /FLUSHED/q <&${COPROC[0]}

if [ $verbose ]
then
	echo "Copying tablespace files from backup..."
fi

cd $DATADIR/$destdatabase
find $DATADIR$sourcedatabase -type f |
parallel --will-cite --eta --progress rsync -a {} $DATADIR$destdatabase/

if [ $verbose ]
then
	echo "Unlocking tables..."
fi
echo "UNLOCK" >&${COPROC[1]}

if [ $verbose ]
then
	echo "Importing tablespaces..."
fi

importsql="SELECT CONCAT('ALTER TABLE $destdatabase.', table_name, ' IMPORT TABLESPACE;') FROM INFORMATION_SCHEMA.TABLES WHERE table_schema='$destdatabase' and table_type='BASE TABLE';"
mysql "$defaults" -B -N information_schema -e "$importsql" |
parallel --will-cite mysql "$defaults" -e "{}"

if [ $verbose ]
then
	echo "Done!"
fi

exit 0
